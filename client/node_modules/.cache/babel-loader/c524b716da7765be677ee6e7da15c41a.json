{"ast":null,"code":"var _jsxFileName = \"/Users/youlinguo/Desktop/apinception/client/src/components/ApiStructure/ApiStructure.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Container, Grid, Paper, Button, Typography, TextField } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createApiStructure, updateApiStructure, deleteApiStructure } from '../../actions/apiStructure';\nconst initialState = {\n  apiName: '',\n  apiCode: '',\n  apiStructureText: ''\n};\n\nconst ApiStructure = () => {\n  const classes = useStyles();\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n  const currentId = useSelector(state => state.currentId); //    console.log('currentId after use selector, ', currentId);\n\n  console.log('what is in the state: ', useSelector(state => state));\n  const apiRecord = useSelector(state => currentId ? state.apiStructure.find(message => message._id === currentId) : null);\n  console.log('apiRecord based on currentId after use selector, ', apiRecord);\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateApiStructure(currentId, form));\n    } else {\n      dispatch(createApiStructure(form));\n    }\n\n    setForm(initialState);\n  };\n\n  useEffect(() => {\n    console.log('is apiRecord data updated: ', apiRecord);\n    setForm({ ...apiRecord\n    });\n    console.log('is form data updated: ', form);\n  }, [currentId]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, currentId ? \"Edit \" : \"Add \", \" API Structure \"), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"apiName\",\n    variant: \"outlined\",\n    label: \"API Name\",\n    fullWidth: true,\n    value: form.apiName,\n    onChange: e => setForm({ ...form,\n      apiName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"apiCode\",\n    variant: \"outlined\",\n    label: \"API Code\",\n    fullWidth: true,\n    value: form.apiCode,\n    onChange: e => setForm({ ...form,\n      apiCode: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"apiStructureText\",\n    variant: \"outlined\",\n    label: \"API Structure\",\n    multiline: true,\n    rows: 10,\n    fullWidth: true,\n    value: form.apiStructureText,\n    onChange: e => setForm({ ...form,\n      apiStructureText: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default ApiStructure;","map":{"version":3,"sources":["/Users/youlinguo/Desktop/apinception/client/src/components/ApiStructure/ApiStructure.js"],"names":["React","useEffect","useState","Container","Grid","Paper","Button","Typography","TextField","useDispatch","useSelector","useStyles","createApiStructure","updateApiStructure","deleteApiStructure","initialState","apiName","apiCode","apiStructureText","ApiStructure","classes","form","setForm","dispatch","currentId","state","console","log","apiRecord","apiStructure","find","message","_id","handleChange","e","target","name","value","handleSubmit","preventDefault","paper","root","submit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container, Grid , Paper, Button, Typography,TextField} from '@material-ui/core';\nimport {useDispatch,useSelector} from 'react-redux';\n\nimport useStyles from './styles';\nimport {createApiStructure, updateApiStructure, deleteApiStructure } from '../../actions/apiStructure';\n\nconst initialState = { apiName:'', apiCode:'',apiStructureText:''};\n\nconst ApiStructure = ()=>{\n    const classes = useStyles();\n    const [form, setForm ] = useState(initialState);\n    const dispatch = useDispatch();\n    const currentId = useSelector((state) => (state.currentId));\n//    console.log('currentId after use selector, ', currentId);\n    console.log('what is in the state: ',useSelector((state) => (state)));\n    const apiRecord = useSelector((state) => (currentId ? state.apiStructure.find((message) => message._id === currentId) : null));\n    console.log('apiRecord based on currentId after use selector, ', apiRecord);\n\n    const handleChange =(e)=>{\n        setForm({...form,[e.target.name]:e.target.value});\n    }\n    const handleSubmit=(e)=>{      \n        e.preventDefault();\n        if(currentId){\n            dispatch( updateApiStructure(currentId,form) );\n        }else {\n            dispatch( createApiStructure(form) );\n        }\n        setForm(initialState);\n    }\n\n    useEffect(()=>{\n        console.log('is apiRecord data updated: ', apiRecord);\n        setForm({ ...apiRecord});\n        console.log('is form data updated: ', form);\n    },[currentId])\n \n    return (\n            <Paper className ={classes.paper} elevation ={3}>\n            <Typography component=\"h1\" variant=\"h5\">{currentId? \"Edit \":\"Add \" } API Structure </Typography>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Grid container spacing={3}>\n                    <TextField name=\"apiName\" variant=\"outlined\" label=\"API Name\" fullWidth value={form.apiName} onChange={(e) => setForm({ ...form, apiName: e.target.value })} />\n                    <TextField name=\"apiCode\" variant=\"outlined\" label=\"API Code\" fullWidth value={form.apiCode} onChange={(e) => setForm({ ...form, apiCode: e.target.value })} />\n                    <TextField name=\"apiStructureText\" variant=\"outlined\" label=\"API Structure\" multiline rows={10} fullWidth value={form.apiStructureText} onChange={(e) => setForm({ ...form, apiStructureText: e.target.value })} />\n                </Grid>\n                <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                    Submit\n                </Button>\n            </form>\n\n            </Paper>\n    );\n}\n\nexport default ApiStructure"]},"metadata":{},"sourceType":"module"}